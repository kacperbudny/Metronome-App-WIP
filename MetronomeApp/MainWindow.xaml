<Window x:Class="MetronomeApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MetronomeApp"
        xmlns:classes="clr-namespace:MetronomeApp.Classes"
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        Title="MetronomeApp"
        SizeToContent="WidthAndHeight">
    <Window.Resources>
        <ContextMenu x:Key="metronomeTempoContextMenu">
            <MenuItem x:Name="ChangeTempoByOneMenuItem"
                      Header="Change tempo by 1" 
                      Click="ChangeTempoByOneMenuItem_Click"/>
            <MenuItem x:Name="ChangeTempoByFiveMenuItem"
                      Header="Change tempo by 5" 
                      Click="ChangeTempoByFiveMenuItem_Click"/>
            <MenuItem x:Name="ChangeTempoByTenMenuItem"
                      Header="Change tempo by 10" 
                      Click="ChangeTempoByTenMenuItem_Click"/>
        </ContextMenu>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="classes:KeyboardCommands.ControlMetronome" 
                        CanExecute="StartButton_CanExecute" 
                        Executed="ControlMetronomeCommand_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Plus1" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Plus1Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Plus5" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Plus5Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Plus10" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Plus10Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Minus1" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Minus1Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Minus5" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Minus5Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.Minus10" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="Minus10Command_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.TapTempoStart" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="TapTempoStart_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.TapTempoCancel" 
                        CanExecute="TapTempoCancel_CanExecute" 
                        Executed="TapTempoCancel_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.TapTempoAccept" 
                        CanExecute="TapTempoAccept_CanExecute" 
                        Executed="TapTempoAccept_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.PlusTimer" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="PlusTimer_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.MinusTimer" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="MinusTimer_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.ControlTimer" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="ControlTimer_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.ResetTimer" 
                        CanExecute="ResetTimer_CanExecute" 
                        Executed="ResetTimer_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.AddExercise" 
                        CanExecute="IfNotInSession_CanExecute" 
                        Executed="AddExercise_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.EditExercise" 
                        CanExecute="ExercisesActions_CanExecute" 
                        Executed="EditExercise_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.DeleteExercise" 
                        CanExecute="ExercisesActions_CanExecute" 
                        Executed="DeleteExercise_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.RefreshList" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="RefreshList_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.ChangeView" 
                        CanExecute="IfNotInSession_CanExecute" 
                        Executed="ChangeView_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.GoToListview" 
                        CanExecute="GoToListview_CanExecute" 
                        Executed="GoToListview_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.AddToSession" 
                        CanExecute="ExercisesActions_CanExecute" 
                        Executed="AddToSession_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.ControlSession" 
                        CanExecute="IfCountdownDisabled_CanExecute" 
                        Executed="ControlSession_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.PreviousExercise" 
                        CanExecute="GoToSessionExercise_CanExecute" 
                        Executed="PreviousExercise_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.NextExercise" 
                        CanExecute="GoToSessionExercise_CanExecute" 
                        Executed="NextExercise_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.SetUpMetronomeForSelected" 
                        CanExecute="ExercisesActions_CanExecute" 
                        Executed="SetUpMetronomeForSelected_Executed" />
        <CommandBinding Command="classes:KeyboardCommands.SaveMetronomesTempo" 
                        CanExecute="ExercisesActions_CanExecute" 
                        Executed="SaveMetronomesTempo_Executed" />
    </Window.CommandBindings>
    <Grid>
        <Rectangle x:Name="OverlayRectangle"
                   Fill="Black" 
                   Panel.ZIndex="1" 
                   Opacity="0.3"
                   Visibility="Hidden"/>

        <Grid x:Name="CountdownGrid"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Panel.ZIndex="1"
              Visibility="Hidden">
            <Rectangle Fill="White" 
                       Width="300"
                       Height="150"
                       Stroke="Black"/>
            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="300">
                <TextBlock x:Name="CountdownTextblock"
                           Text="3"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="50"
                           FontWeight="DemiBold"/>
                <TextBlock Text="Coming next:"
                           HorizontalAlignment="Center"
                           FontSize="18"/>
                <TextBlock x:Name="ComingSongTextblock"
                           Text="Song name"
                           HorizontalAlignment="Center"
                           FontSize="18"
                           FontWeight="DemiBold"
                           MaxWidth="300"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="InformationGrid"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Panel.ZIndex="1"
              Visibility="Hidden">
            <Rectangle Fill="White" 
                       Width="350"
                       Height="200"
                       Stroke="Black"/>
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <TextBlock Text="Congratulations!"
                           FontWeight="DemiBold"
                           FontSize="20"
                           Margin="0,10"/>
                <TextBlock Text="You've finished your session."
                           FontSize="18"/>
                <DockPanel>
                    <TextBlock Text="You've spent "
                               FontSize="18"/>
                    <TextBlock x:Name="TotalSessionTimeTextblock"
                               Text="x"
                               FontSize="18"
                               FontWeight="DemiBold"/>
                    <TextBlock Text=" playing "
                               FontSize="18"/>
                    <TextBlock x:Name="TotalExerciseNumberTextblock"
                               Text="x"
                               FontSize="18"
                               FontWeight="DemiBold"/>
                    <TextBlock Text=" exercices"
                               FontSize="18"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock Text="and raised your total BPMs by "
                               FontSize="18"/>
                    <TextBlock x:Name="BPMIncreaseTextblock"
                               Text="x"
                               FontSize="18"
                               FontWeight="DemiBold"/>
                    <TextBlock Text="."
                               FontSize="18"/>
                </DockPanel>
                <Button x:Name="AcceptCongtratulationsButton"
                        Content="Cool!"
                        Style="{StaticResource gridButtonsStyle}"
                        Width="100"
                        Margin="0,10"
                        Click="AcceptCongtratulationsButton_Click"/>
            </StackPanel>
        </Grid>

        <StackPanel Orientation="Horizontal" 
                    Margin="10">
            <StackPanel x:Name="MetronomeStackPanel" 
                        Grid.Column="1">
                <Grid Margin="0,0,0,5">
                    <StackPanel HorizontalAlignment="Center" 
                                Orientation="Horizontal"  
                                Margin="0,5">
                        <Button x:Name="TempoDownButton"
                                Content="◄"
                                Style="{StaticResource changeTempoButtonsStyle}"
                                Click="TempoDownButton_Click"
                                ContextMenu="{StaticResource metronomeTempoContextMenu}"/>
                        <TextBox x:Name="TempoBox" 
                                Text="120" 
                                Margin="5,0"
                                PreviewTextInput="TempoBox_PreviewTextInput"
                                TextChanged="TempoBox_TextChanged"
                                FontSize="20"
                                Width="100"
                                TextAlignment="Center"
                                PreviewKeyDown="TempoBox_PreviewKeyDown"/>
                        <Button x:Name="TempoUpButton"
                                Content="►"
                                Style="{StaticResource changeTempoButtonsStyle}"
                                Click="TempoUpButton_Click"
                                ContextMenu="{StaticResource metronomeTempoContextMenu}"/>
                    </StackPanel>
                </Grid>

                <Button x:Name="StartButton" 
                        Content="START"
                        FontSize="50" 
                        Click="StartButton_Click"
                        MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                        MinHeight="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>

                <Grid Margin="0,5,0,5">
                    <GroupBox BorderBrush="Silver" 
                              BorderThickness="1" 
                              Padding="10,5">
                        <GroupBox.Header>Tap Tempo</GroupBox.Header>
                        <StackPanel HorizontalAlignment="Center" 
                                    Orientation="Horizontal">
                            <Button x:Name="CancelTapTempoButton"
                                    Content="Cancel"
                                    Style="{StaticResource defaultButtonStyle}"
                                    Command="classes:KeyboardCommands.TapTempoCancel"/>
                            <Button x:Name="TapTempoButton"
                                    Content="Tap tempo"
                                    Style="{StaticResource defaultButtonStyle}"
                                    Click="TapTempoButton_Click"
                                    Margin="5"
                                    Width="120"/>
                            <Button x:Name="AcceptTapTempoButton"
                                    Content="Accept"
                                    Style="{StaticResource defaultButtonStyle}"
                                    Command="classes:KeyboardCommands.TapTempoAccept"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>

                <Grid>
                    <GroupBox BorderBrush="Silver" 
                              BorderThickness="1" 
                              Padding="10,5"
                              Width="{Binding ActualWidth, ElementName=MetronomeStackPanel}">
                        <GroupBox.Header>Timer</GroupBox.Header>
                        <StackPanel>
                            <StackPanel HorizontalAlignment="Center" 
                                        Orientation="Horizontal"
                                        x:Name="TimerStackPanel">
                                <Button x:Name="TimerDownButton"
                                        Content="-"
                                        Style="{StaticResource defaultButtonStyle}"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                        Click="TimerDownButton_Click"/>
                                <Label x:Name="TimerLabel" 
                                       x:FieldModifier="public"
                                       Content="01:00"
                                       Style="{StaticResource labelStyle}"
                                       Margin="5,0"/>
                                <Button x:Name="TimerUpButton"
                                        Content="+"
                                        Style="{StaticResource defaultButtonStyle}"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                        Click="TimerUpButton_Click"/>
                            </StackPanel>
                            <StackPanel x:Name="TimerButtonsStackPanel"
                                        HorizontalAlignment="Center" 
                                        Orientation="Horizontal">
                                <Button x:Name="StartTimerButton"
                                        Content="Start timer"
                                        Margin="0,5,5,0"
                                        Style="{StaticResource defaultButtonStyle}"
                                        Click="StartTimerButton_Click" />
                                <Button x:Name="ResetTimerButton"
                                        Content="Reset timer"
                                        Margin="0,5,0,0"
                                        Style="{StaticResource defaultButtonStyle}"
                                        Click="ResetTimerButton_Click"
                                        IsEnabled="False"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </StackPanel>

            <Grid Margin="10,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Button x:Name="AddExerciseButton"
                        Content="Add exercise" 
                        Click="AddExerciseButton_Click"
                        Style="{StaticResource gridButtonsStyle}"
                        Grid.Column="0"
                        Grid.Row="0"/>
                <Button x:Name="EditExerciseButton"
                        Content="Edit exercise" 
                        Click="EditExerciseButton_Click"
                        Style="{StaticResource gridButtonsStyle}"
                        Grid.Column="2"
                        Grid.Row="0"
                        IsEnabled="False"/>
                <Button x:Name="DeleteExerciseButton"
                        Content="Delete exercise" 
                        Click="DeleteExerciseButton_Click"
                        Style="{StaticResource gridButtonsStyle}"
                        Grid.Column="4"
                        Grid.Row="0"
                        IsEnabled="False"/>
                <Button x:Name="RefreshButton"
                        Content="Refresh list" 
                        Click="RefreshButton_Click"
                        Style="{StaticResource gridButtonsStyle}"
                        Grid.Column="6"
                        Grid.Row="0"/>

                <Grid Grid.Column="0"
                      Grid.ColumnSpan="7"
                      Grid.Row="1" 
                      Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="SearchBox" 
                             Padding="5,0"
                             VerticalContentAlignment="Center"
                             Height="36"
                             TextChanged="SearchBox_TextChanged">
                    </TextBox>
                    <TextBlock IsHitTestVisible="False" 
                               Text="Search..." 
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Left" 
                               Margin="10,0,0,0" 
                               Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" 
                                        Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" 
                                                 Value="">
                                        <Setter Property="Visibility" 
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <ComboBox Grid.Column="1"
                              Margin="10,0,0,0"
                              Name="ExercisesCategoriesComboBox"
                              Text="All exercices"
                              FontSize="16"
                              VerticalContentAlignment="Center"
                              HorizontalContentAlignment="Center"
                              Padding="10,0"
                              Width="250"
                              SelectionChanged="ExercisesCategoriesComboBox_SelectionChanged">
                        <ComboBoxItem>
                            <TextBlock Text="All exercices"/>
                        </ComboBoxItem>
                        <ComboBoxItem>
                            <TextBlock Text="Exercices in session mode"/>
                        </ComboBoxItem>
                    </ComboBox>
                </Grid>

                <Grid Margin="0,10,0,10"
                      Grid.Row="2"
                      Grid.ColumnSpan="7"
                      Width="750"
                      Panel.ZIndex="1">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" 
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ExercisesListView, Path=Items.Count}" 
                                             Value="0">
                                    <Setter Property="Visibility" 
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Rectangle Fill="Black" 
                               Panel.ZIndex="1" 
                               Opacity="0.2"/>

                    <Rectangle Fill="White" 
                               Height="50"
                               Panel.ZIndex="1">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" 
                                        Value="450" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ExercisesCategoriesComboBox, Path=SelectedIndex}" 
                                                 Value="1">
                                        <Setter Property="Width" 
                                                Value="550" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>

                    <TextBlock x:Name="EmptyListTextblock"
                               FontSize="18" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Panel.ZIndex="1">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" 
                                        Value="List is empty. Please add some elements to the list." />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ExercisesCategoriesComboBox, Path=SelectedIndex}" 
                                                 Value="1">
                                        <Setter Property="Text" 
                                                Value="Session list is empty. Please add some elements to the session." />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <ListView x:Name="ExercisesListView"
                          Margin="0,10,0,10"
                          Grid.Row="2"
                          Grid.ColumnSpan="7"
                          Width="750"
                          MouseDoubleClick="ExercisesListView_MouseDoubleClick"
                          SelectionChanged="ExercisesListView_SelectionChanged"
                          SelectionMode="Single"
                          FontSize="14"
                          ItemContainerStyle="{StaticResource coloringListViewWhenCompleted}">
                    <ListView.Resources>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Padding" 
                                    Value="10,0" />
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="0"
                                            x:Name="ButtonsColumn">
                                <GridViewColumn.HeaderContainerStyle>
                                    <Style TargetType="{x:Type FrameworkElement}">
                                        <Setter Property="IsHitTestVisible" 
                                                Value="False"/>
                                    </Style>
                                </GridViewColumn.HeaderContainerStyle>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate x:Name="ButtonsDataTemplate">
                                        <DockPanel>
                                            <Button x:Name="ListDownButton"
                                                    Content="▼"
                                                    Padding="2,0"
                                                    Margin="0,0,5,0"
                                                    Click="ListDownButton_Click"/>
                                            <Button x:Name="ListUpButton"
                                                    Content="▲"
                                                    Padding="2,0"
                                                    Click="ListUpButton_Click"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Session" 
                                            Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel HorizontalAlignment="Center">
                                            <CheckBox Click="CheckBox_Click"
                                                      IsChecked="{Binding IsInSessionMode}" 
                                                      HorizontalAlignment="Center"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Name" 
                                            Width="Auto"
                                            DisplayMemberBinding="{Binding Name}"/>

                            <GridViewColumn Header="Tempo" 
                                            Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <TextBlock Text="{Binding CurrentTempo}"/>
                                            <TextBlock Text="/"/>
                                            <TextBlock Text="{Binding TargetTempo}"
                                                       FontWeight="Bold"/>
                                            <TextBlock Text=" BPM"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Practice time" 
                                            Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <TextBlock Text="{Binding PracticeTime}"/>
                                            <TextBlock Text=" minutes"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Notes" 
                                            Width="Auto"
                                            DisplayMemberBinding="{Binding Notes}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <Grid Grid.ColumnSpan="7"
                      Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ApplyMetronomeSettingsButton"
                            Content="Set up metronome for selected exercise" 
                            Click="ApplyMetronomeSettingsButton_Click"
                            Style="{StaticResource gridButtonsStyle}"
                            Grid.Column="0"
                            IsEnabled="False"/>
                    <Button x:Name="SaveMetronomeSettingsIntoItemButton"
                            Content="Save current tempo into selected exercise" 
                            Click="SaveMetronomeSettingsIntoItemButton_Click"
                            Style="{StaticResource gridButtonsStyle}"
                            Grid.Column="2"
                            IsEnabled="False"/>
                </Grid>

                <Grid Grid.ColumnSpan="7"
                      Grid.Row="4"
                      Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="PreviousSessionExerciseButton"
                            Click="PreviousSessionExerciseButton_Click"
                            Style="{StaticResource gridButtonsStyle}"
                            Content="◄ Previous exercise"
                            Width="160"
                            Grid.Column="0"
                            IsEnabled="False"/>
                    <Button x:Name="StartSessionModeButton"
                            FontWeight="Bold"
                            Click="StartSessionModeButton_Click"
                            Style="{StaticResource gridButtonsStyle}"
                            Margin="10,0,10,0"
                            Grid.Column="1">
                        <DockPanel>
                            <Ellipse Margin="0,0,10,0"
                                     Width="15"
                                     Height="15"
                                     Stroke="Black"
                                     StrokeThickness="1"
                                     Fill="DarkSlateGray"
                                     x:Name="SessionIndicator"/>
                            <TextBlock Text="Start session"
                                       Margin="0,0,0,0"
                                       x:Name="SessionButtonLabel"/>
                        </DockPanel>
                    </Button>
                    <Button x:Name="NextSessionExerciseButton"
                            Click="NextSessionExerciseButton_Click"
                            Style="{StaticResource gridButtonsStyle}"
                            Content="Next exercise ►"
                            Width="160"
                            Grid.Column="2"
                            IsEnabled="False"/>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
 